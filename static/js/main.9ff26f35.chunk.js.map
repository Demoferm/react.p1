{"version":3,"sources":["images/img.png","Components/Header/Logo.js","Components/Header/HeaderMenuItem.js","Components/Header/HeaderMenu.js","Components/Header/Header.js","Components/Content/Content.js","Components/Footer/FooterMenuItem.js","Components/Footer/FooterMenu.js","Components/Footer/Contacts.js","Components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","className","alt","src","LogoImg","align","HeaderMenuItem","props","href","item","url","name","HeaderMenu","MenuItems","map","el","key","Header","titile","version","Content","useState","calcResult","setCalcResult","minRange","maxRange","setRange","ButtonClickCalc","e","CalcArr","i","push","type","id","color","placeholder","onClick","onButtonClick","document","getElementById","value","MenuButtons","onChange","target","reverse","FooterMenuItem","FooterMenu","Contacts","Footer","App","n","alert","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,iC,+KCY5BC,MAVf,WACI,OAIG,yBAAKC,UAAU,OAAOC,IAAI,OAAOC,IAAKC,IAASC,MAAM,UCQ7CC,MAbf,SAAwBC,GACpB,OAKI,8BACA,uBAAGN,UAAU,OAAOO,KAAMD,EAAME,KAAKC,KAAMH,EAAME,KAAKE,MADtD,SCIOC,MATf,SAAoBL,GAChB,OACI,uBAAGF,MAAM,SACRE,EAAMM,UAAUC,KAAI,SAACC,GAAD,OAAQ,kBAAC,EAAD,CAAgBC,IAAKD,EAAIN,KAAMM,SCarDE,MAff,SAAgBV,GACZ,OACI,yBAAKN,UAAU,OACX,yBAAKA,UAAU,SACX,uBAAGA,UAAU,gBAAb,WAAoC,gCAASM,EAAMW,QAAnD,MAAsE,wCAAcX,EAAMY,QAApB,OAG1E,yBAAKlB,UAAU,SACX,kBAAC,EAAD,CAAYY,UAAWN,EAAMM,e,OCmF9BO,MA5Ff,SAAiBb,GAAQ,IAAD,EACgBc,mBAAS,KADzB,mBACbC,EADa,KACDC,EADC,OAEoBF,mBAAS,CAAC,EAAE,IAFhC,yCAEZG,EAFY,KAEHC,EAFG,KAEQC,EAFR,KAGdC,EAAkB,SAACC,GACrBL,GAAeD,IAAcM,IAE7BC,EAAQ,GACZ,GAAIL,GAAUC,GAAYD,EAAS,GAAKC,EAAS,GAAKA,GAAW,KAAOD,GAAY,IAAM,CACtFK,EAAU,GACV,IAAK,IAAIC,EAAIN,EAAUM,GAAKL,EAAUK,IACtCD,EAAQE,KAAKD,GAajB,OACI,yBAAK7B,UAAU,OACX,yBAAKA,UAAU,SACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,SACX,wBAAIA,UAAU,MAAd,yCACA,oDACA,uBAAGA,UAAU,QAAb,qkBAYJ,yBAAKA,UAAU,QAAQI,MAAM,SACzB,+CAAuB,2BAAG,2BAAO2B,KAAK,OAAOC,GAAG,OAAOC,MAAM,MAAMC,YAAY,kBAC3E,4BAAQC,QAAS,WACb7B,EAAM8B,cAAcC,SAASC,eAAe,QAAQC,SADxD,MAIA,4BAAQJ,QAAS,WACbE,SAASC,eAAe,QAAQC,MAAQ,KAD5C,YAMR,yBAAKnC,MAAM,SAASJ,UAAU,SAC1B,2BAAIM,EAAMkC,YAAY3B,KAAI,SAAAC,GAAE,OAAI,4BAAQC,IAAKD,EAAIqB,QAAS,WACtD7B,EAAM8B,cAActB,KACpBA,OACJ,yBAAKd,UAAU,OACX,yBAAKA,UAAU,UACvB,wBAAII,MAAM,UAAV,eAEQ,yBAAKJ,UAAU,UACX,uBAAGI,MAAM,UAAT,0CAEJ,yBAAKJ,UAAU,SACnB,uBAAGI,MAAM,SAAT,IAAkB,2BAAO2B,KAAK,OAAOrB,KAAK,QAAQwB,YAAY,OAAOO,SAnDpD,SAACd,GAEtBF,EAAS,CAACE,EAAEe,OAAOH,MAAMf,SAmDjB,yBAAKxB,UAAU,SACX,uBAAGI,MAAM,QAAT,IAAiB,2BAAO2B,KAAK,OAAOrB,KAAK,QAAQwB,YAAY,KAAKO,SAzD7D,SAACd,GACtBF,EAAS,CAACF,EAASI,EAAEe,OAAOH,aA0DhB,yBAAKnC,MAAM,QAAQJ,UAAU,SAC7B,2BAAI4B,EAAQe,UAAU9B,KAAI,SAAAC,GAAE,OAAI,4BAAQC,KAAMD,EAAIqB,QAAS,WAC3DT,GAAiBZ,KADe,IAE3BA,QAEzB,yBAAKV,MAAM,SAASJ,UAAU,SACd,4BAAMqB,IAEE,yBAAKjB,MAAM,OAAOJ,UAAU,SACxB,2BAAI4B,EAAQe,UAAU9B,KAAI,SAAAC,GAAE,OAAI,4BAAQC,IAAKD,EAAIqB,QAAS,WACtDT,EAAgBZ,KADY,IAE3BA,YCxElB8B,MAZf,SAAwBtC,GACpB,OAII,8BACI,uBAAGN,UAAU,OAAOO,KAAMD,EAAME,KAAKC,KAAMH,EAAME,KAAKE,MAD1D,SCKOmC,MATf,SAAoBvC,GAChB,OAEI,uBAAGF,MAAM,QACJE,EAAMM,UAAUC,KAAI,SAACC,GAAD,OAAM,kBAAC,EAAD,CAAgBC,IAAKD,EAAIN,KAAMM,SCDvDgC,MAJf,WACI,OAAQ,uBAAG9C,UAAU,YAAb,aAAkC,uBAAGO,KAAK,mBAAR,qBCc/BwC,MAbf,SAAgBzC,GACZ,OACI,yBAAKN,UAAU,OACX,yBAAKA,UAAU,SACnB,kBAAC,EAAD,CAAYY,UAAaN,EAAMM,aAE3B,yBAAKZ,UAAU,SACnB,kBAAC,EAAD,SC2COgD,MAhDf,WAMI,IACMpC,EAAY,CACd,CACIF,KAAM,MACND,IAAK,KAET,CACIC,KAAM,MACND,IAAK,KAET,CACIC,KAAM,QACND,IAAK,KAET,CACIC,KAAM,OACND,IAAK,MAeb,OACI,yBAAKT,UAAU,aACX,kBAAC,EAAD,CAAQY,UAAWA,EAAWK,OAjC5B,SAiCuCC,QAAQ,UACjD,kBAAC,EAAD,CAASsB,YAfb,CACI,WACA,WACA,WACA,YAWmCJ,cARrB,SAACa,GACnBC,MAAMD,MAQF,kBAAC,EAAD,CAAQrC,UAAWA,MCnCXuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFrB,SAASC,eAAe,SDyHpB,kBAAmBqB,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9ff26f35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img.dbecb379.png\";","import React from 'react';\nimport LogoImg from './../../images/img.png';\nfunction Logo() {\n    return (\n        /*<img src='logo_react.png' alt='' align='left' height='60'/>*/\n        /*<img src='../../images/logo_react.png' alt='' align='left' height='60'/>*/\n       // <img alt='' src='./../../images/logo_react.png' align='left' height='60'/>\n       <img className='logo' alt='Logo' src={LogoImg} align='left'/>\n\n)\n}\n\nexport default Logo;\n","import React from 'react';\n\nfunction HeaderMenuItem(props) {\n    return (\n        // <p align='right'>\n        //     {props.MenuItems.map((el,i) => <a href=\"#\"><li key={i}>{el}</li></a>)}\n        //\n        // </p>\n        <span>\n        <a className='menu' href={props.item.url}>{props.item.name}</a>\n            &nbsp;\n        </span>\n    )\n}\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport HeaderMenuItem from \"./HeaderMenuItem\";\n\nfunction HeaderMenu(props) {\n    return(\n        <p align='right'>\n        {props.MenuItems.map((el) => <HeaderMenuItem key={el} item={el} />)}\n    </p>\n    // <HeaderMenuItem MenuItems = {props.MenuItems}/>\n    )\n}\n\nexport default HeaderMenu;\n","import React from 'react';\nimport Logo from \"./Logo\";\nimport HeaderMenu from \"./HeaderMenu\";\n\nfunction Header(props) {\n    return (\n        <div className='row'>\n            <div className='col-4'>\n                <p className='header-title'>Course: <strong>{props.titile}</strong> | <em>version: {props.version} </em>\n                </p>\n            </div>\n            <div className='col-8'>\n                <HeaderMenu MenuItems={props.MenuItems}/>\n            </div>\n            {/*<Logo/>*/}\n        </div>\n    )\n}\n\nexport default Header;\n","import React, {useState} from 'react';\nimport Logo from \"../Header/Logo\";\n\nfunction Content(props) {\n    const [calcResult, setCalcResult] = useState('0')\n    const [[minRange,maxRange], setRange] = useState([0,0])\n    const ButtonClickCalc = (e) => {\n        setCalcResult(+calcResult + +e);\n    }\n    let CalcArr=[];\n    if (minRange<=maxRange && minRange>0 && maxRange>0 && maxRange <=100 && minRange <= 100)  {\n        CalcArr = [];\n        for (let i = minRange; i <= maxRange; i++)\n        CalcArr.push(i);\n    }\n\n    const onChangeRangeMax = (e) => {\n        setRange([minRange,e.target.value]);\n    }\n        const onChangeRangeMin = (e) => {\n         // if (e.target.name=='upper')\n            setRange([e.target.value,maxRange]);\n         // if (e.target.name==='lower')\n         //     setRange([minRange,e.target.value]);\n    }\n\n    return (\n        <div className='row'>\n            <div className='col-4'>\n                <Logo/>\n            </div>\n            <div className='col-8'>\n                <h1 className='h1'>Programming Academy in Silicon Valley</h1>\n                <h2>What is Lorem Ipsum?</h2>\n                <p className='text'> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem\n                    Ipsum has\n                    been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley\n                    of type\n                    and scrambled it to make a type specimen book. It has survived not only five centuries, but also the\n                    leap\n                    into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with\n                    the\n                    release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop\n                    publishing\n                    software like Aldus PageMaker including versions of Lorem Ipsum. </p>\n            </div>\n            <div className='col-4' align='right'>\n                <p>Enter your name:</p><p><input type='text' id='name' color='red' placeholder='write here...'/>\n                    <button onClick={() => {\n                        props.onButtonClick(document.getElementById('name').value)\n                    }}>OK\n                    </button>\n                    <button onClick={() => {\n                        document.getElementById('name').value = '';\n                    }}>CANCEL\n                    </button>\n            </p>\n            </div>\n            <div align='center' className='col-8'>\n                <p>{props.MenuButtons.map(el => <button key={el} onClick={() => {\n                    props.onButtonClick(el)\n                }}>{el}</button>)}</p>\n                <div className='row'>\n                    <div className='col-12'>\n            <h2 align='center'>Calculator</h2>\n                    </div>\n                    <div className='col-12'>\n                        <p align='center'>(Values have to be between 1 and 100)</p>\n                    </div>\n                    <div className='col-6'>\n                <p align='right'> <input type='text' name='lower' placeholder='From' onChange={onChangeRangeMin}/></p>\n                    </div>\n                    <div className='col-6'>\n                        <p align='left'> <input type='text' name='upper' placeholder='To' onChange={onChangeRangeMax}/></p>\n                    </div>\n                    <div align='right' className='col-4'>\n                    <p>{CalcArr.reverse().map(el => <button key={-el} onClick={() => {\n                    ButtonClickCalc(-el)\n                    }}>-{el}</button>)}</p>\n                    </div>\n<div align='center' className='col-4'>\n                <h1 >{calcResult}</h1>\n</div>\n                        <div align='left' className='col-4'>\n                            <p>{CalcArr.reverse().map(el => <button key={el} onClick={() => {\n                                ButtonClickCalc(el)\n                            }}>+{el}</button>)}</p>\n                        </div>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Content;\n","import React from 'react';\n\nfunction FooterMenuItem(props) {\n    return (\n        /*<p align='left'>*/\n        /*    {props.MenuItems.map((el,i) => <a href=\"#\"><li key={i}>{el}</li></a>)}*/\n        /*</p>*/\n        <span>\n            <a className=\"menu\" href={props.item.url}>{props.item.name}</a>\n        &nbsp;\n        </span>\n    )\n}\n\nexport default FooterMenuItem;\n","import React from 'react';\nimport FooterMenuItem from \"./FooterMenuItem\";\n\nfunction FooterMenu(props) {\n    return (\n    // <FooterMenuItem MenuItems = {props.MenuItems}/>\n        <p align='left'>\n            {props.MenuItems.map((el)=><FooterMenuItem key={el} item={el}/>)}\n        </p>\n    )\n}\n\nexport default FooterMenu;\n","import React from 'react';\n\nfunction Contacts() {\n    return  <p className='contacts'>Contacts: <a href='https://pasv.us'>https://pasv.us</a></p>\n}\n\nexport default Contacts;\n","import React from 'react';\nimport FooterMenu from \"./FooterMenu\";\nimport Contacts from \"./Contacts\";\n\nfunction Footer(props) {\n    return (\n        <div className='row'>\n            <div className='col-4'>\n        <FooterMenu MenuItems = {props.MenuItems}/>\n            </div>\n            <div className='col-8'>\n        <Contacts/>\n            </div>\n        </div>\n);\n}\n\nexport default Footer;\n","import React, {useState} from 'react';\nimport './App.css';\nimport Header from \"./Components/Header/Header\";\nimport Content from \"./Components/Content/Content\";\nimport Footer from \"./Components/Footer/Footer\";\n\nfunction App() {\n    // const [todo, setTodo] = useState('Hi')\n    // const todoChange = (e) => {\n    //     setTodo(e.target.value);\n    // }\n// let CalcArr=[];\n    const x = 'REACT!';\n    const MenuItems = [\n        {\n            name: 'One',\n            url: '1'\n        },\n        {\n            name: 'Two',\n            url: '2'\n        },\n        {\n            name: 'Three',\n            url: '3'\n        },\n        {\n            name: 'Four',\n            url: '4'\n        }];\n    const MenuButtons =\n        [\n            '1 Button',\n            '2 Button',\n            '3 Button',\n            '4 Button',\n        ];\n\n    const onButtonClick = (n) => {\n        alert(n);\n    }\n\n\n    return (\n        <div className=\"container\">\n            <Header MenuItems={MenuItems} titile={x} version='0.0.4'/>\n            <Content MenuButtons={MenuButtons} onButtonClick={onButtonClick}/>\n            <Footer MenuItems={MenuItems}/>\n            {/*{todo} <input type='text' placeholder='...' onChange={todoChange}/>*/}\n        </div>\n\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}